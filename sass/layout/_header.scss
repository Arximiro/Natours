.header {
  height: 95vh;
  background-image: linear-gradient(
    to right bottom,
    rgba($color-primary-light, 0.801),
    rgba($color-primary-dark, 0.801)),
    url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;

  -webkit-clip-path: polygon(0 0, 100% 0, 75vh 75vh, 0 100%);
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* clip-path allows you to create a custom polygon. Setting the X and Y axis of any number of defined points.
  Point one is the reference point. It's location is relative to the container with 0%, 0% being the top left corner.
  All other points are set relative to point one. So for this code it sets point one as 0% 0%, so the top left corner.
  Point two is 100% x and 0% y from that, so right corner of the parent container.
  Point three is 100% x from point 1 so far right, but 75vh y, so 75% down the parent container from point one's location.
  Point four is 0% x from point one, meaning on the same x axis, but 100% y, ending up in the bottom right corner of the parent container.
  You can make any custom polygon shape using this method and adding more points.*/

  @include respond(tab-land) {
    -webkit-clip-path: polygon(0 0, 100% 0, 90vh 75vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 90vh, 0 100%);
  }


  @include respond(phone) {
    -webkit-clip-path: polygon(0 0, 100% 0, 85vh 85vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
  }

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;

  /* Position abosolute places an item in an absolute position within it's relative parent element. */
  }

  &__logo {
    height: 3.5rem;
  }

  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%); /* This goes 50% of the way in on both x and y into the container when positioning it. */
    text-align: center;
  }
}
