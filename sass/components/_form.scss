.form {
  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__input {
    font-size: 1.5rem;
    font-family: inherit;
    color: inherit;
    padding: 1.5rem 2rem;
    border-radius: .2rem;
    background-color: rgba($color-white, .5);
    border: .3rem solid transparent;
    width: 90%;
    display: block;
    transition: all .3s;

    &:required {
      box-shadow: none;
       // Specific fix for Firefox to get rid of the default red outline that appears after typing text into an input field then removing it.
    }

    &:focus {
      outline: none;
      box-shadow: 0 1rem 2rem rgba($color-black, .1);
      border-bottom: .3rem solid $color-primary;

      &:invalid {
        border-bottom: .3rem solid rgb(202, 61, 61);
      }      
    }

    &::-webkit-input-placeholder {
      color: $color-grey-dark-2;
    }
  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: .7rem;
    display: block;
    transition: all .3s;
  }

  &__input:placeholder-shown + &__label {
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4rem);
  }

  &__radio-group {
    width: 49%;
    display: inline-block;
  }

  &__radio-input {
    display: none;
  }

  &__radio-label {
    font-size: $default-font-size;
    cursor: pointer;
    position: relative;
    padding-left: 4rem;
  }

  &__radio-button {
    height: 3rem;
    width: 3rem;
    border: .5rem solid $color-primary;
    border-radius: 50%;
    display: inline-block;
    position: absolute;
    left: 0;
    top: -.4rem;

    &::after {
      content: "";
      display: block;
      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: $color-primary;
      opacity: 0;
      transition: opacity .2s;
    }
  }

  &__radio-input:checked + &__radio-label &__radio-button::after {
    opacity: 1;
  }
}

// ---Notes---
// inputs don't inherit the font family and color from the parent so it must be set here.
// border around input is set to transparent so it still exists but is invisible. This way when the visibile border appears the boxes don't shift .3rem.
// Setting display to block forces the label to appear below the input.

// The invalid pseuso class is used to show the user when their input value does not meet the required parameters for that input.

// outline none disables the default blue outline that appears around an input when selected.

// The adjacent sibling selector + is used like this. &__input:placeholder-shown + &__label
// If selects the input's placeholder-shown pseudo class, then it selecs the label class after. It works because they are on the same level in the html.
// If the elements are not adjacent, you can use the general sibling selector ~.

// To make the placeholder be invisible when the box is empty, a few techniques are used.
// First the adjacent sibling selector is used to say WHEN the placeholder of input is shown, set the label opacity to 0 or invisible and visibility to hidden.
// Visibility hidden makes the label actual not rendered and just invisible as would be the case if only opacity was used.
// The reason this is also needed is because if only opacity is set, the user could still click the invisible label to focus an input.
// You can't JUST use visibility howerver, because you cannot animate visibility. So you need opacity there to animate.
// The translateY -4rem, makes it to where the label starts inside the input, and when the user starts typing it moves down to it's original position.

// Each radio group is set to 49% width and inline block to make them appear side by side. 50% is too much.
// The actual radio input is set to hidden so that custom radio buttons can be used. It's still back there though.

// radio button is an empty span used for the outline of the custom radio button.
// radio button after is a pseudo element that makes up the checked dot in the custom radio button after if it clicked it starts invisible.
// &__radio-input:checked + &__radio-label &__radio-button::after -- adjacent child to radio input when checked is selected, then its child's after pseudo element is selected.
